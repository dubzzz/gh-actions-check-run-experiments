name: On job comment PR

on:
  #  check_run:
  #    types: [created, rerequested, completed, requested_action]
  #  check_suite:
  #    types: [completed]
  #  status:
  #  watch:
  #    types: [started]
  #  workflow_call:
  #  workflow_dispatch:
  workflow_run:
    workflows: [PRs and Push]
    types: [completed, in_progress]
#  pull_request:
#    branches:
#      - main

permissions:
  contents: none
  pull-requests: write
  issues: none

jobs:
  comment_completed:
    if: github.event.workflow_run.event == 'pull_request' && github.event.action == 'completed'
    name: "Comment completed"
    runs-on: ubuntu-latest
    steps:
      - name: Create success comment
        if: github.event.workflow_run.conclusion == 'success'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{github.event.workflow_run.pull_requests[0].number}}
          body: |
            :green_circle: test
      - name: Create failure comment
        if: github.event.workflow_run.conclusion != 'success'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{github.event.workflow_run.pull_requests[0].number}}
          body: |
            :red_circle: test
  comment_running:
    if: github.event.workflow_run.event == 'pull_request' && github.event.action == 'in_progress'
    name: "Comment running"
    runs-on: ubuntu-latest
    steps:
      - name: Create running comment
        if: github.event.workflow_run.conclusion == 'success'
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{github.event.workflow_run.pull_requests[0].number}}
          body: |
            :runner: test
  dump-context:
    name: "Dump context"
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"

      - name: Show default environment variables
        run: |
          echo "The job_id is: $GITHUB_JOB"   # reference the default environment variables
          echo "The id of this action is: $GITHUB_ACTION"   # reference the default environment variables
          echo "The run id is: $GITHUB_RUN_ID"
          echo "The GitHub Actor's username is: $GITHUB_ACTOR"
          echo "GitHub SHA: $GITHUB_SHA"
